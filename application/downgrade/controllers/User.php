<?php

/*
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class User extends CI_Controller {

    function __construct() {
        parent::__construct();
        $this->load->model('User_model');
    }

    /*
     * Listing of users
     */

    function login() {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('username', 'Username', 'required');
        $this->form_validation->set_rules('password', 'Password', 'required');

        if ($this->form_validation->run()) {
            $username = $this->input->post('username');
            $password = sha1($this->input->post('password'));

            $result = $this->User_model->checkLogin($username, $password);
            if ($result) {
                redirect(base_url('dashboard/index'));
            } else {
                $this->session->set_flashdata('msg', 'Invalid Username Or Password.');
                $this->session->set_flashdata('msg_type', 'danger');
                $this->load->view('login');
            }
        } else {
            $this->load->view('login');
        }
    }

    function logout() {
        session_destroy();
        unset($_SESSION);
        session_regenerate_id(true);
        $this->session->set_flashdata('msg', 'You are Successfully Logout.');
        $this->session->set_flashdata('msg_type', 'success');
        redirect(base_url('user/login'));
    }

    function index() {
        $data['users'] = $this->User_model->get_all_users();

        $data['_view'] = 'user/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new user
     */

    function add() {
        if (isset($_POST) && count($_POST) > 0) {
            $student = $this->input->post('student') ? 1 : 0;
            $promote = $this->input->post('promote') ? 1 : 0;
            $class_section = $this->input->post('class_section') ? 1 : 0;
            $teacher = $this->input->post('teacher') ? 1 : 0;
            $payment = $this->input->post('payment') ? 1 : 0;
            $fees = $this->input->post('fees') ? 1 : 0;
            $leaving_certificate = $this->input->post('leaving_certificate') ? 1 : 0;
            $reports = $this->input->post('reports') ? 1 : 0;
            $website_contain = $this->input->post('website_contain') ? 1 : 0;
            $user = $this->input->post('user') ? 1 : 0;

            $params = array(
                'password' => sha1($this->input->post('password')),
                'username' => $this->input->post('username'),
                'fname' => $this->input->post('fname'),
                'lname' => $this->input->post('lname'),
                'email' => $this->input->post('email'),
                'user-type' => $this->input->post('user_type'),
                'student' => $student,
                'promote' => $promote,
                'class_section' => $class_section,
                'teacher' => $teacher,
                'payment' => $payment,
                'fees' => $fees,
                'fees' => $fees,
                'leaving_certificate' => $leaving_certificate,
                'reports' => $reports,
                'website_contain' => $website_contain,
                'user' => $user,
            );
            $user_id = $this->User_model->add_user($params);
            redirect('user/index');
        } else {
            $data['_view'] = 'user/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a user
     */

    function edit($user_id) {
        // check if the user exists before trying to edit it
        $data['user'] = $this->User_model->get_user($user_id);
        if (isset($data['user']['user_id'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $student = $this->input->post('student') ? 1 : 0;
                $promote = $this->input->post('promote') ? 1 : 0;
                $class_section = $this->input->post('class_section') ? 1 : 0;
                $teacher = $this->input->post('teacher') ? 1 : 0;
                $payment = $this->input->post('payment') ? 1 : 0;
                $fees = $this->input->post('fees') ? 1 : 0;
                $leaving_certificate = $this->input->post('leaving_certificate') ? 1 : 0;
                $reports = $this->input->post('reports') ? 1 : 0;
                $website_contain = $this->input->post('website_contain') ? 1 : 0;
                $user = $this->input->post('user') ? 1 : 0;
                $params = array(
                    'password' => $this->input->post('password'),
                    'username' => $this->input->post('username'),
                    'fname' => $this->input->post('fname'),
                    'lname' => $this->input->post('lname'),
                    'email' => $this->input->post('email'),
                    'user-type' => $this->input->post('user_type'),
                    'student' => $student,
                    'promote' => $promote,
                    'class_section' => $class_section,
                    'teacher' => $teacher,
                    'payment' => $payment,
                    'fees' => $fees,
                    'fees' => $fees,
                    'leaving_certificate' => $leaving_certificate,
                    'reports' => $reports,
                    'website_contain' => $website_contain,
                    'user' => $user,
                );

                $this->User_model->update_user($user_id, $params);
                redirect('user/index');
            } else {
                $data['_view'] = 'user/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The user you are trying to edit does not exist.');
    }

    /*
     * Deleting user
     */

    function remove($user_id) {
        $user = $this->User_model->get_user($user_id);

        // check if the user exists before trying to delete it
        if (isset($user['user_id'])) {
            $this->User_model->delete_user($user_id);
            redirect('user/index');
        } else
            show_error('The user you are trying to delete does not exist.');
    }

    function setting() {
        $this->load->library('form_validation');
        $this->form_validation->set_rules('oldpass', 'Old Password', 'required');
        $this->form_validation->set_rules('newpass', 'New Password', 'required');
        $this->form_validation->set_rules('confirmpass', 'Confirm Password', 'matches[newpass]|required');
        if ($this->form_validation->run() == true) {
//            var_dump($this->input->post(),$this->session->userdata('user_id'));die;
            $old_pass = $this->input->post('oldpass');
            $user_id = $this->session->userdata('user_id');
            $result = $this->User_model->matchPassword($user_id, $old_pass);
            if ($result) {
                $params = array(
                    'password' => sha1($this->input->post('newpass')),
                );
                if ($this->User_model->update_user($user_id, $params)) {
                    $this->session->set_flashdata('msg', 'Password Changed,Please Login');
                    $this->session->set_flashdata('msg_type', 'danger');
                    redirect(site_url('user/logout'));
                } else {
                    $this->session->set_flashdata('msg', 'Something Went Wrong Please Try Again');
                    $data['_view'] = 'user/setting';
                    $this->load->view('layouts/main', $data);
                }
            } else {
                $this->session->set_flashdata('msg', 'Old Password is not match , Please Enter Valid Password');
                $data['_view'] = 'user/setting';
                $this->load->view('layouts/main', $data);
            }
        } else {
            $data['_view'] = 'user/setting';
            $this->load->view('layouts/main', $data);
        }
    }

    function generate_leaveing() {
        $this->load->model('Clas_model');
        $data['all_class'] = $this->Clas_model->get_all_class();
        $data['_view'] = 'user/generate_leaving';
        $this->load->view('layouts/main', $data);
    }

    function reset_password($user_id) {
        $user = $this->User_model->get_user($user_id);

        // check if the user exists before trying to delete it
        if (isset($user['user_id'])) {
            $new_password = $this->randomPassword();
            $this->User_model->reset_password($user_id);
            $this->session->set_flashdata('pmsg','Password is reseted your new password is '.$new_password);
            redirect('user/index');
        } else
            show_error('The user you are trying to delete does not exist.');
    }

   function randomPassword() {
    $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
    $pass = array(); //remember to declare $pass as an array
    $alphaLength = strlen($alphabet) - 1; //put the length -1 in cache
    for ($i = 0; $i < 8; $i++) {
        $n = rand(0, $alphaLength);
        $pass[] = $alphabet[$n];
    }
    return implode($pass); //turn the array into a string
}

}
