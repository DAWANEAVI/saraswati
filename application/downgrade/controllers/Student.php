<?php

/*
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Student extends CI_Controller {

    function __construct() {
        parent::__construct();
        $this->load->model('Student_model');
        $this->load->model('Fee_model');
        $this->load->model('Payment_model');
    }

    /*
     * Listing of student
     */

    function index() {
        $data['student'] = $this->Student_model->get_all_student();

        $data['_view'] = 'student/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new student
     */

    function add() {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('fullname', 'Fullname', 'required');
        $this->form_validation->set_rules('class_id', 'Class Id', 'required');
        $this->form_validation->set_rules('section_id', 'Section Id', 'required');
        $this->form_validation->set_rules('place_of_birth', 'Place Of Birth', 'required');
        $this->form_validation->set_rules('dob', 'Dob', 'required');
        $this->form_validation->set_rules('religion', 'Religion', 'required');
        $this->form_validation->set_rules('nationality', 'Nationality', 'required');
        $this->form_validation->set_rules('nationality', 'Nationality', 'required');
        $this->form_validation->set_rules('mother_tounge', 'Mother  Tounge', 'required');
        $this->form_validation->set_rules('caste', 'Caste', 'required');
        $this->form_validation->set_rules('category', 'Category', 'required');

//        $this->form_validation->set_rules('last_school', 'Last School', 'required');
//        $this->form_validation->set_rules('last_class', 'Last Class', 'required');
//        $this->form_validation->set_rules('last_medium', 'Last Medium', 'required');
////		$this->form_validation->set_rules('sought_admission_in_class','Sought Admission In Class','required');
//		$this->form_validation->set_rules('medium','Medium','required');
        $this->form_validation->set_rules('father_name', 'Father Name', 'required');
        $this->form_validation->set_rules('mobile_no', 'Mobile No', 'required');
        $this->form_validation->set_rules('academic_year', 'Academic Year', 'required');
        $this->form_validation->set_rules('mother_full_name', 'Mother Full Name', 'required');

        if ($this->form_validation->run()) {

            if (isset($_POST['rte_applicable'])) {
                $rte_applicable = 1;
            } else {
                $rte_applicable = 0;
            }
            $config['upload_path'] = './uploads/student/';
            $config['allowed_types'] = 'gif|jpg|png';
            $this->load->library('upload', $config);

            if (!$this->upload->do_upload('image')) {
                $error = array('error' => $this->upload->display_errors());
                $image = '';
            } else {
                $upload_data = $this->upload->data(); //Returns array of containing all of the data related to the file you uploaded.
                $image = $upload_data['file_name'];
            }
//                    var_dump($this->input->post());die;
            $parent_on_service = $this->input->post('parent_on_service');
            $last_school_is_recognize = $this->input->post('is_last_school_recognize');
            $params = array(
                'class_id' => $this->input->post('class_id'),
                'section_id' => $this->input->post('section_id'),
                'rte_applicable' => $rte_applicable,
                'register_date' => date('Y-m-d', strtotime($this->input->post('admission_date'))),
                'registration_no' => $this->input->post('registration_no'),
                'saral_id' => $this->input->post('saral_id'),
                'fullname' => $this->input->post('fullname'),
                'aadhar_no' => $this->input->post('aadhar_no'),
                'religion' => $this->input->post('religion'),
                'nationality' => $this->input->post('nationality'),
                'mother_tounge' => $this->input->post('mother_tounge'),
                'caste' => $this->input->post('caste'),
                'category' => $this->input->post('category'),
                'age' => $this->input->post('age'),
                'dob' => date('Y-m-d', strtotime($this->input->post('dob'))),
                'last_school' => $this->input->post('last_school'),
                'last_class' => $this->input->post('last_class'),
                'last_medium' => $this->input->post('last_medium'),
                'parent_on_service' => !isset($parent_on_service) ? 0 : 1,
                'is_last_school_recognize' => !isset($last_school_is_recognize) ? 0 : 1,
                'father_name' => $this->input->post('father_name'),
                'at_post' => $this->input->post('at_post'),
                'tahsil' => $this->input->post('tahsil'),
                'dist' => $this->input->post('dist'),
                'occupation' => $this->input->post('occupation'),
                'ph_no' => $this->input->post('ph_no'),
                'mobile_no' => $this->input->post('mobile_no'),
                'office_address_phone_no' => $this->input->post('office_address_phone_no'),
                'mother_full_name' => $this->input->post('mother_full_name'),
                'annual_income' => $this->input->post('annual_income'),
                'local_address' => $this->input->post('local_address'),
                'relation_ship_with_parent' => $this->input->post('relation_ship_with_parent'),
                'academic_year' => $this->input->post('academic_year'),
                'place_of_birth' => $this->input->post('place_of_birth'),
                'image' => $image,
                'is_active' => 1,
            );

            $student_id = $this->Student_model->add_student($params);
            $fees = $this->Fee_model->getTotalFeeByClass($this->input->post('class_id'));
            $feesby_type = $this->Fee_model->getTotalFeeByFeesType($this->input->post('class_id'));
            if (!empty($feesby_type)) {
                for ($i=0; $i <count($feesby_type) ; $i++) { 
                     if ($feesby_type[$i]['fees_for']=="Education Fee") {
                        $edufee = $feesby_type[$i]['amount'];
                    }
                    if ($feesby_type[$i]['fees_for']=="Term Fee") {
                        $trmfee = $feesby_type[$i]['amount'];
                    }
                    if ($feesby_type[$i]['fees_for']=="Exam Fee") {
                        $exmfee = $feesby_type[$i]['amount'];
                    }
                    if ($feesby_type[$i]['fees_for']=="Sport Fee") {
                        $sportfee = $feesby_type[$i]['amount'];
                    }
                    if ($feesby_type[$i]['fees_for']=="Miscellaneous Fee") {
                        $misfee = $feesby_type[$i]['amount'];
                    }
                }
                   
                    
                     }
                     //print_r($edufee."-");
                    // print_r($trmfee."-");
                    // print_r($exmfee."-");
                    // print_r($sportfee."-");
                    // print_r($misfee."-");

                
            //foreach ($feesby_type as $fessa => $f) {
            //   print_r($f['fees_for']);
            //}
          // print_r($feesby_type);
           
            $academic_year = $this->input->post('academic_year');
            if ($rte_applicable == 0) {
                $payment_parameter = array(
                    'student_id' => $student_id,
                    'academic_year' => $academic_year,
                    'total_amount' => $fees->total_amount,
                    'paid_amount' => 0,
                    'education_fee' => $edufee,
                    'term_fee' => $trmfee,
                    'exam_fee' => $exmfee,
                    'sport_fee' => $sportfee,
                    'miscellaneous_fee' => $misfee,    
                );
                //print_r($payment_parameter);
               // die;
                
            } else {
                $payment_parameter = array(
                    'student_id' => $student_id,
                    'academic_year' => $academic_year,
                    'total_amount' => 0,
                    'paid_amount' => 0,
                );
            }

            $payment_id = $this->Payment_model->add_payment($payment_parameter);
            redirect('student/index');
        } else {
            $this->load->model('Clas_model');
            $data['all_class'] = $this->Clas_model->get_all_class();

            $this->load->model('Section_model');
            $data['all_section'] = $this->Section_model->get_all_section();

            $data['_view'] = 'student/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a student
     */

    function edit($student_id) {
        // check if the student exists before trying to edit it
        $data['student'] = $this->Student_model->get_student($student_id);

        if (isset($data['student']['student_id'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('fullname', 'Fullname', 'required');
            $this->form_validation->set_rules('class_id', 'Class Id', 'required');
            $this->form_validation->set_rules('section_id', 'Section Id', 'required');
            $this->form_validation->set_rules('place_of_birth', 'Place Of Birth', 'required');
            $this->form_validation->set_rules('dob', 'Dob', 'required');
           

            $this->form_validation->set_rules('father_name', 'Father Name', 'required');
            $this->form_validation->set_rules('mobile_no', 'Mobile No', 'required');
            $this->form_validation->set_rules('academic_year', 'Academic Year', 'required');
            $this->form_validation->set_rules('mother_full_name', 'Mother Full Name', 'required');

            if ($this->form_validation->run()) {
                if (isset($_POST['rte_applicable'])) {
                    $rte_applicable = 1;
                } else {
                    $rte_applicable = 0;
                }
                $config['upload_path'] = './uploads/student/';
                $config['allowed_types'] = 'gif|jpg|png';
                $this->load->library('upload', $config);

                if (!$this->upload->do_upload('image')) {
                    $error = array('error' => $this->upload->display_errors());
                    $image = '';
                } else {
                    $upload_data = $this->upload->data(); //Returns array of containing all of the data related to the file you uploaded.
                    $image = $upload_data['file_name'];
                }
                if ($image == '') {
                    $image = $this->input->post('old_image');
                }
                $dob = strtr($this->input->post('dob'), '/', '-');
                $admission_date = strtr($this->input->post('register_date'), '/', '-');
                $params = array(
                    'class_id' => $this->input->post('class_id'),
                    'section_id' => $this->input->post('section_id'),
                    'rte_applicable' => $rte_applicable,
                    'registration_no' => $this->input->post('registration_no'),
                    'saral_id' => $this->input->post('saral_id'),
                    'fullname' => $this->input->post('fullname'),
                    'aadhar_no' => $this->input->post('aadhar_no'),
                    'religion' => $this->input->post('religion'),
                    'nationality' => $this->input->post('nationality'),
                    'mother_tounge' => $this->input->post('mother_tounge'),
                    'caste' => $this->input->post('caste'),
                    'category' => $this->input->post('category'),
                    'age' => $this->input->post('age'),
                    'dob' => date('Y-m-d', strtotime($dob)),
                    'last_school' => $this->input->post('last_school'),
                    'last_class' => $this->input->post('last_class'),
                    'last_medium' => $this->input->post('last_medium'),
                    'is_last_school_recognize' => $this->input->post('is_last_school_recognize'),
                    'sought_admission_in_class' => $this->input->post('sought_admission_in_class'),
                    'medium' => $this->input->post('medium'),
                    'father_name' => $this->input->post('father_name'),
                    'at_post' => $this->input->post('at_post'),
                    'tahsil' => $this->input->post('tahsil'),
                    'dist' => $this->input->post('dist'),
                    'occupation' => $this->input->post('occupation'),
                    'ph_no' => $this->input->post('ph_no'),
                    'mobile_no' => $this->input->post('mobile_no'),
                    'parent_on_service' => $this->input->post('parent_on_service'),
                    'office_address_phone_no' => $this->input->post('office_address_phone_no'),
                    'mother_full_name' => $this->input->post('mother_full_name'),
                    'annual_income' => $this->input->post('annual_income'),
                    'local_address' => $this->input->post('local_address'),
                    'relation_ship_with_parent' => $this->input->post('relation_ship_with_parent'),
                    'academic_year' => $this->input->post('academic_year'),
                    'place_of_birth' => $this->input->post('place_of_birth'),
                    'image' => $image,
                    'register_date' => date('Y-m-d', strtotime($admission_date)),
                );
                $this->Student_model->update_student($student_id, $params);
                $fees = $this->Fee_model->getTotalFeeByClass($this->input->post('class_id'));
//            var_dump($fees);die;
                $academic_year = $this->input->post('academic_year');
                if ($rte_applicable == 0) {
                    $payment_parameter = array(
                        'total_amount' => $fees->total_amount,
                    );
                } else {
                    $payment_parameter = array(
                        'total_amount' => 0,
                    );
                }
                $payment_id = $this->Payment_model->updatePaymentByStudentIdAcademicYear($student_id,$academic_year,$payment_parameter);
                redirect('student/index');
            } else {
                $this->load->model('Clas_model');
                $data['all_class'] = $this->Clas_model->get_all_class();

                $this->load->model('Section_model');
                $data['all_section'] = $this->Section_model->get_all_section();

                $data['_view'] = 'student/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The student you are trying to edit does not exist.');
    }

    /*
     * Deleting student
     */

    function remove($student_id) {
        $student = $this->Student_model->get_student($student_id);

        // check if the student exists before trying to delete it
        if (isset($student['student_id'])) {
            $params = array(
                'is_active'=>0,);
            $this->Student_model->update_student($student_id,$params);
            redirect('student/index');
        } else
            show_error('The student you are trying to delete does not exist.');
    }

    function getStudentByClassAndSection() {
        $class_id = $this->input->post('class_id');
        $section_id = $this->input->post('section_id');
        $result = $this->Student_model->getStudentByClassAndSection($class_id, $section_id);
        echo json_encode($result);
    }

    function getStudentByClass() {
        $class_id = $this->input->post('class_id');
        $result = $this->Student_model->getStudentByClass($class_id);
        echo json_encode($result);
    }

    function uploadStudentFromExcel() {

        $data['_view'] = 'student/upload-from-excel';
        $this->load->view('layouts/main', $data);
    }

    function import() {
        $this->load->library('excel');
        if ($_FILES['file']['name'] != '') {
            $config['upload_path'] = './uploads/excels/';
            $config['allowed_types'] = 'xls|xlsx';
            $config['max_size'] = 2048;
            $this->load->library('upload', $config);
            $this->upload->initialize($config);

            if (!$this->upload->do_upload('file')) {
                json_error("File Upload Error", $this->upload->display_errors(), 400);
            } else {
                $uploadData = $this->upload->data();

                $object = PHPExcel_IOFactory::load($uploadData['full_path']);
                foreach ($object->getWorksheetIterator() as $worksheet) {
                    $highestRow = $worksheet->getHighestRow();
                    $highestColumn = $worksheet->getHighestColumn();
                    for ($row = 2; $row <= $highestRow; $row++) {
                        $aadhar_no = $worksheet->getCellByColumnAndRow(0, $row)->getValue();
                        $class = $worksheet->getCellByColumnAndRow(1, $row)->getValue();
                        $section = $worksheet->getCellByColumnAndRow(2, $row)->getValue();
                        //getting id for class and section
                        $class_id = $this->getClassByNum($class);
                        $section_id = $this->getSectionByNameAndClassId($class_id, $section);

                        $fullname = $worksheet->getCellByColumnAndRow(3, $row)->getValue();
                        $religion = $worksheet->getCellByColumnAndRow(4, $row)->getValue();
                        $nationality = $worksheet->getCellByColumnAndRow(5, $row)->getValue();
                        $mother_tounge = $worksheet->getCellByColumnAndRow(6, $row)->getValue();
                        $caste = $worksheet->getCellByColumnAndRow(7, $row)->getValue();
                        $category = $worksheet->getCellByColumnAndRow(8, $row)->getValue();
                        $image = $worksheet->getCellByColumnAndRow(9, $row)->getValue();
                        $age = $worksheet->getCellByColumnAndRow(10, $row)->getValue();
                        $dob_raw = $worksheet->getCellByColumnAndRow(11, $row)->getValue();
                        $dob = date('Y-m-d',strtotime(str_replace('/','-',$dob_raw)));
                        $last_school = $worksheet->getCellByColumnAndRow(12, $row)->getValue();
                        $last_class = $worksheet->getCellByColumnAndRow(13, $row)->getValue();
                        $last_medium = $worksheet->getCellByColumnAndRow(14, $row)->getValue();
                        $is_last_school_recognize = $worksheet->getCellByColumnAndRow(15, $row)->getValue();
                        $father_name = $worksheet->getCellByColumnAndRow(16, $row)->getValue();
                        $at_post = $worksheet->getCellByColumnAndRow(17, $row)->getValue();
                        $tahsil = $worksheet->getCellByColumnAndRow(18, $row)->getValue();
                        $dist = $worksheet->getCellByColumnAndRow(19, $row)->getValue();
                        $occupation = $worksheet->getCellByColumnAndRow(20, $row)->getValue();
                        $ph_no = $worksheet->getCellByColumnAndRow(21, $row)->getValue();
                        $mobile_no = $worksheet->getCellByColumnAndRow(22, $row)->getValue();
                        $parent_on_service = $worksheet->getCellByColumnAndRow(23, $row)->getValue();
                        $office_address_phone_no = $worksheet->getCellByColumnAndRow(24, $row)->getValue();
                        $mother_full_name = $worksheet->getCellByColumnAndRow(25, $row)->getValue();
                        $annual_income = $worksheet->getCellByColumnAndRow(26, $row)->getValue();
                        $local_address = $worksheet->getCellByColumnAndRow(27, $row)->getValue();
                        $relation_ship_with_parent = $worksheet->getCellByColumnAndRow(28, $row)->getValue();
                        $saral_id = $worksheet->getCellByColumnAndRow(29, $row)->getValue();
                        $old_fees = $worksheet->getCellByColumnAndRow(30, $row)->getValue();
                        $paid_current_year = $worksheet->getCellByColumnAndRow(31, $row)->getValue();
                        $registration_number = $worksheet->getCellByColumnAndRow(32, $row)->getValue();
                        $admission_date_raw = $worksheet->getCellByColumnAndRow(33, $row)->getValue();
                        $rte_applicable = $worksheet->getCellByColumnAndRow(34, $row)->getValue();
                        $place_of_birth = $worksheet->getCellByColumnAndRow(35, $row)->getValue();
                        $admission_date = date('Y-m-d',strtotime(str_replace('/','-',$admission_date_raw)));
                        $year = date('Y');
                        $next_y = $year - 2000;
                        $next_y++;
                        $academic_year = $year . '-' . $next_y;
                        $is_active = 1;
                        $data_payment[]=array(
                            'paid_fees'=>$paid_current_year
                            ); 
                        $data[] = array(
                            'registration_no' => $registration_number,
                            'register_date' => $admission_date,
                            'aadhar_no' => $aadhar_no,
                            'class_id' => $class_id,
                            'section_id' => $section_id,
                            'rte_applicable'=>$rte_applicable,
                            'fullname' => $fullname,
                            'religion' => $religion,
                            'nationality' => $nationality,
                            'mother_tounge' => $mother_tounge,
                            'caste' => $caste,
                            'category' => $category,
                            'image' => $image,
                            'age' => $age,
                            'dob' => $dob,
                            'last_school' => $last_school,
                            'last_class' => $last_class,
                            'last_medium' => $last_medium,
                            'is_last_school_recognize' => $is_last_school_recognize,
                            'father_name' => $father_name,
                            'at_post' => $at_post,
                            'tahsil' => $tahsil,
                            'dist' => $dist,
                            'occupation' => $occupation,
                            'ph_no' => $ph_no,
                            'mobile_no' => $mobile_no,
                            'parent_on_service' => $parent_on_service,
                            'office_address_phone_no' => $office_address_phone_no,
                            'mother_full_name' => $mother_full_name,
                            'annual_income' => $annual_income,
                            'local_address' => $local_address,
                            'relation_ship_with_parent' => $relation_ship_with_parent,
                            'academic_year' => $academic_year,
                            'is_active' => $is_active,
                            'saral_id' => $saral_id,
                            'old_fees' => $old_fees,
                            'paid_fees' => 0,
                            'place_of_birth'=>$place_of_birth,
                        );
                    }
                }
                $count=0;
                foreach ($data as $k => $v) {
                    
                   
                    $student_id = $this->Student_model->add_student($v);
                    $fees = $this->Fee_model->getTotalFeeByClass($v['class_id']);
//            var_dump($fees);die;
                    $academic_year = $v['academic_year'];
                    if($v['rte_applicable']){
                    $payment_parameter = array(
                        'student_id' => $student_id,
                        'academic_year' => $academic_year,
                        'total_amount' => 0,
                        'paid_amount' => $paid_current_year,
                    );
                    }else{
                      $payment_parameter = array(
                        'student_id' => $student_id,
                        'academic_year' => $academic_year,
                        'total_amount' => $fees->total_amount,
                        'paid_amount' => $paid_current_year + $data_payment[$count]['paid_fees'] ,
                    );   
                    }
                    $payment_id = $this->Payment_model->add_payment($payment_parameter);
                    $count++;
                }
                $k++;
                $this->session->set_flashdata('msg', $k . ' Students Records Are Added');
                redirect('student/index');
            }
        } else {
            $this->session->set_flashdata('msg', 'Please upload valid file');
            $data['_view'] = 'student/upload-from-excel';
            $this->load->view('layouts/main', $data);
        }
    }

    function getStudentNoByClass() {
        $class = $this->input->post('class_id');
        $result = $this->Student_model->getStudentNoByClass($class);
        echo json_encode($result);
    }

    function getStudentById() {
        $student_id = $this->input->post('student_id');
        $result = $this->Student_model->getStudentData($student_id);
        echo json_encode($result);
    }

    function getClassByNum($num) {
       
        $result = $this->Student_model->getClassByNum($num);
        return $result->class_id;
    }

    function getSectionByNameAndClassId($class_id, $section) {
        $result = $this->Student_model->getSectionByNameAndClassId($class_id, $section);
        return $result;
    }

    function history($student_id = 0) {
        $data['student_details'] = $this->Student_model->get_student($student_id);
        $this->load->model("Payment_model");
        $data['payment_history'] = $this->Payment_model->getPaymentHistory($student_id);
        $data['transactions'] = $this->Payment_model->getTransactions($student_id);
//        var_dump($data);die;
        $data['_view'] = 'student/history';
        $this->load->view('layouts/main', $data);
    }

    function getStudentDetailsview($student_id = 0) {
        $data['student_details'] = $this->Student_model->get_student($student_id);
        $this->load->model("Payment_model");
        $data['payment_history'] = $this->Payment_model->getPaymentHistory($student_id);
        $data['transactions'] = $this->Payment_model->getTransactions($student_id);
//        var_dump($data);die;
        $data['_view'] = 'student/view';
//        var_dump($data);die;
        $this->load->view('layouts/main', $data);
    }

    function getActiveStudent() {
        $this->load->model('Student_model');
        $data = $this->Student_model->getActiveStudent();
        echo json_encode($data);
    }

}
