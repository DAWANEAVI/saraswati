<?php

/*
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class User extends CI_Controller {

    function __construct() {
        parent::__construct();
        $this->load->model('User_model');
    }

    /*
     * Listing of users
     */

    function login() {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('username', 'Username', 'required');
        $this->form_validation->set_rules('password', 'Password', 'required');

        if ($this->form_validation->run()) {
            $username = $this->input->post('username');
            $password = hash('sha256',$this->input->post('password'));

            $result = $this->User_model->checkLogin($username, $password);
            if ($result) {
                redirect(base_url('dashboard/index'));
            } else {
                $this->session->set_flashdata('msg', 'Invalid Username Or Password.');
                $this->session->set_flashdata('msg_type', 'danger');
                $this->load->view('login');
            }
        } else {
            $this->load->view('login');
        }
    }

    function logout() {
        session_destroy();
        unset($_SESSION);
        session_regenerate_id(true);
        $this->session->set_flashdata('msg', 'You are Successfully Logout.');
        $this->session->set_flashdata('msg_type', 'success');
        redirect(base_url('user/login'));
    }

    function userSetup() {
        $data['users'] = $this->User_model->get_all_users();

        $data['_view'] = 'user/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new user
     */

    function add() {
        if (isset($_POST) && count($_POST) > 0) {
        $this->load->library('form_validation');
        $this->form_validation->set_rules('userCatID', 'User Category', 'required|trim|xss_clean');
        $this->form_validation->set_rules('userDesID', 'User Designation', 'required|trim|xss_clean');
        $this->form_validation->set_rules('fname', 'First Name', 'required|trim|xss_clean');
        $this->form_validation->set_rules('lname', 'Last Name', 'required|trim|xss_clean');
        $this->form_validation->set_rules('email', 'Email Address', 'required|trim|xss_clean');
        $this->form_validation->set_rules('username', 'User Name', 'required|trim|xss_clean|is_unique[user_users.username]');
        $this->form_validation->set_rules('password', 'Password', 'required|trim|xss_clean');
        $this->form_validation->set_rules('confirmpassword', 'Confirm Password', 'required|matches[password]');
        if ($this->form_validation->run()) {
            $params = array(
                'userCatID' => $this->input->post('userCatID'),
                'userDesID' => $this->input->post('userDesID'),
                'fname' => $this->input->post('fname'),
                'lname' => $this->input->post('lname'),
                'email' => $this->input->post('email'),
                'username' => $this->input->post('username'),
                'password' => hash('sha256',$this->input->post('password')),
                'statusID' => 1,
                'created_by'=> $this->session->user_id,
            );
            $user_id = $this->User_model->add_user($params);
            $params = array(
                'user_id' => $user_id,
                'userDesID' => $this->input->post('userDesID'),
                'userCatID' => $this->input->post('userCatID'),
                'modules' => json_encode($this->input->post('Test')),
                'submodules' => json_encode($this->input->post('Test')),
                'statusID' => 1,
                'created_by' => $this->session->user_id,
            );
            $this->User_model->insert_user_access($params);

            $this->session->set_flashdata('alertType','success' );
            $this->session->set_flashdata('message','User Added Please Add Access To User' );
            redirect('user/access_control/'.$user_id);
        }else{
            $this->session->set_flashdata('alertType','failed' );
            $this->session->set_flashdata('message', validation_errors() );
            redirect('user/add');
        }
        
        } else {
            $data['designation'] = $this->User_model->get_designations();
            $data['categories'] = $this->User_model->get_user_categories();
            $data['_view'] = 'user/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a user
     */

    function edit($user_id) {
        // check if the user exists before trying to edit it
        $data['user'] = $this->User_model->get_user($user_id);
        if (isset($data['user']['user_id'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    //'password' => $this->input->post('password'),
                    'username' => $this->input->post('username'),
                    'fname' => $this->input->post('fname'),
                    'lname' => $this->input->post('lname'),
                    'email' => $this->input->post('email'),
                    'userCatID' => $this->input->post('userCatID'),
                    'userDesID' => $this->input->post('userDesID'),
                    'modified_by'=> $this->session->user_id,
                );

                $this->User_model->update_user($user_id, $params);

                $params = array(
                    'userDesID' => $userDesID,
                    'userCatID' => $userCatID,
                    'modified_by'=> $this->session->user_id,
                );
                $this->User_model->update_user_access($user_id, $params);

                $this->session->set_flashdata('alertType','success' );
                $this->session->set_flashdata('message','User Updated Successfully..' );
                redirect('user/userSetup');
            } else {
                $data['designation'] = $this->User_model->get_designations();
                $data['categories'] = $this->User_model->get_user_categories();
                $data['_view'] = 'user/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The user you are trying to edit does not exist.');
    }

    /*
     * Deleting user
     */

    function remove($user_id) {
        $user = $this->User_model->get_user($user_id);

        // check if the user exists before trying to delete it
        if (isset($user['user_id'])) {
            $this->User_model->delete_user($user_id);
            redirect('user/index');
        } else
            show_error('The user you are trying to delete does not exist.');
    }

    function setting() {
        $this->load->library('form_validation');
        $this->form_validation->set_rules('oldpass', 'Old Password', 'required');
        $this->form_validation->set_rules('newpass', 'New Password', 'required');
        $this->form_validation->set_rules('confirmpass', 'Confirm Password', 'matches[newpass]|required');
        if ($this->form_validation->run() == true) {
//            var_dump($this->input->post(),$this->session->userdata('user_id'));die;
            $old_pass = $this->input->post('oldpass');
            $user_id = $this->session->userdata('user_id');
            $result = $this->User_model->matchPassword($user_id, $old_pass);
            if ($result) {
                $params = array(
                    'password' => hash('sha256',$this->input->post('newpass')),
                );
                if ($this->User_model->update_user($user_id, $params)) {
                    $this->session->set_flashdata('msg', 'Password Changed,Please Login');
                    $this->session->set_flashdata('msg_type', 'danger');
                    redirect(site_url('user/logout'));
                } else {
                    $this->session->set_flashdata('msg', 'Something Went Wrong Please Try Again');
                    $data['_view'] = 'user/setting';
                    $this->load->view('layouts/main', $data);
                }
            } else {
                $this->session->set_flashdata('msg', 'Old Password is not match , Please Enter Valid Password');
                $data['_view'] = 'user/setting';
                $this->load->view('layouts/main', $data);
            }
        } else {
            $data['_view'] = 'user/setting';
            $this->load->view('layouts/main', $data);
        }
    }

    function generate_leaveing() {
        $this->load->model('Clas_model');
        $data['all_class'] = $this->Clas_model->get_all_class();
        $data['_view'] = 'user/generate_leaving';
        $this->load->view('layouts/main', $data);
    }

    function reset_password($user_id) {
        $user = $this->User_model->get_user($user_id);

        // check if the user exists before trying to delete it
        if (isset($user['user_id'])) {
            $new_password = $this->randomPassword();
            $this->User_model->reset_password($user_id);
            $this->session->set_flashdata('pmsg','Password is reseted your new password is '.$new_password);
            redirect('user/index');
        } else
            show_error('The user you are trying to delete does not exist.');
    }

   function randomPassword() {
    $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
    $pass = array(); //remember to declare $pass as an array
    $alphaLength = strlen($alphabet) - 1; //put the length -1 in cache
    for ($i = 0; $i < 8; $i++) {
        $n = rand(0, $alphaLength);
        $pass[] = $alphabet[$n];
    }
    return implode($pass); //turn the array into a string
    }

    function designationSetup() {
        $data['designations'] = $this->User_model->get_designations();
        $data['_view'] = 'user/index_designation';
        $this->load->view('layouts/main', $data);
    }

    function access_control($user_id) {
        // check if the user exists before trying to edit it
        $data['user'] = $this->User_model->get_user($user_id);
        if (isset($data['user']['user_id'])) {

            $data['module'] = $this->User_model->get_modules();
            $submodule = [];
            foreach ($data['module'] as $key => $value) {
                $submodule[$key] = $this->User_model->get_submodules_by_module_id($value['moduleID']);
            }
            $data['submodule'] = $submodule;
            //print_r($submodule);die();

            if (isset($_POST) && count($_POST) > 0) {
                $user_id = $this->input->post('user_id');
                $userDesID = $this->input->post('userDesID');
                $userCatID = $this->input->post('userCatID');
                $modules = json_encode($this->input->post('modules'));
                $submodules_input = [];
                $all_submodules = $this->User_model->get_all_submodules();
                foreach ($all_submodules as $subkey => $subvalue) {
                    $submodules_input[$subvalue['submoduleName']] = $this->input->post($subvalue['submoduleName']);
                   
                }
                $submodules = json_encode($this->input->post('submodule'));
                //echo json_encode($submodules_input);die();
                $user_access_result = $this->User_model->get_user_access($user_id);
                if(empty($user_access_result)){
                    $params = array(
                        'user_id' => $user_id,
                        'userDesID' => $userDesID,
                        'userCatID' => $userCatID,
                        'modules' => $modules,
                        'submodules' => json_encode($submodules_input),
                        'statusID' => 1,
                        'created_by' => $this->session->user_id,
                    );
    
                    $this->User_model->insert_user_access($params);
                }else{

                    $params = array(
                        'user_id' => $user_id,
                        'userDesID' => $userDesID,
                        'userCatID' => $userCatID,
                        'modules' => $modules,
                        'submodules' => json_encode($submodules_input),
                        'statusID' => 1,
                        'modified_by'=> $this->session->user_id,
                    );

                    //print_r($params);die();
    
                    $this->User_model->update_user_access($user_id, $params);

                }
                $this->session->set_flashdata('alertType','success' );
                $this->session->set_flashdata('message','Access Control Added Success....' );
                redirect('user/userSetup');
            } else {
                $data['user_access'] = $this->User_model->get_user_access($user_id);
                $data['user_module_access'] = json_decode($data['user_access']['modules']);
                $data['user_submodule_access'] = json_decode($data['user_access']['submodules']);
                //print_r($data['user_submodule_access']);die();
                $data['_view'] = 'user/access_control';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The user you are trying to edit does not exist.');
    }

}
